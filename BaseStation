#include <SPI.h>
#include <LoRa.h>
#include <math.h>

#define SCK 42
#define MISO 41
#define MOSI 2
#define SS 1
#define rst 5
#define dio0 4


byte localAddress = 0xFF;
int recipient;
String incoming;
byte sender;
byte incomingMsgId;
byte incomingLength;
float lat, lon;
int ID;



const double RADIUS_OF_EARTH = 6371000;  // Earth's radius in meters

double haversine(double lat1, double lon1, double lat2, double lon2) {
  double dLat = (lat2 - lat1) * M_PI / 180.0;
  double dLon = (lon2 - lon1) * M_PI / 180.0;

  lat1 = lat1 * M_PI / 180.0;
  lat2 = lat2 * M_PI / 180.0;

  double a = pow(sin(dLat / 2), 2) + pow(sin(dLon / 2), 2) * cos(lat1) * cos(lat2);
  double c = 2 * asin(sqrt(a));
  return RADIUS_OF_EARTH * c;
}


void setup() {
  Serial.begin(115200);
  SPI.begin(SCK, MISO, MOSI, SS);
  Serial.println("LoRa Receiver");
  LoRa.setPins(SS, rst, dio0);

  while (!LoRa.begin(915E6)) {
    Serial.println(".");
    delay(500);
  }
  Serial.println("LoRa Initializing OK!");
}

void loop() {
  int packetSize = LoRa.parsePacket();
  if (packetSize) {
    Serial.print("Received packet '");

    recipient = LoRa.read();       // recipient address
    sender = LoRa.read();          // sender address
    incomingMsgId = LoRa.read();   // incoming msg ID
    incomingLength = LoRa.read();  // incoming msg length

    char incomingMessage[incomingLength + 1];
    for (int i = 0; i < incomingLength; i++) {
      incomingMessage[i] = (char)LoRa.read();
    }
    incomingMessage[incomingLength] = '\0';
    incoming = String(incomingMessage);

    if (recipient == localAddress || recipient == 0xFF) {
      Serial.println("This message is for me.");
      sscanf(incoming.c_str(), "%f,%f,ID%d", &lat, &lon, &ID);

      Serial.print("ID: ");
      Serial.println(ID);
      Serial.print("Latitude: ");
      Serial.println(lat, 7);
      Serial.print("Longitude: ");
      Serial.println(lon, 7);

      // Dummy GPS coordinates 1000 meters away from the received lat/lon
      float dummyLat = lat + 0.009;
      float dummyLon = lon + 0.009;

      double distance = haversine(lat, lon, dummyLat, dummyLon);

      Serial.print("Dummy Latitude: ");
      Serial.println(dummyLat, 7);
      Serial.print("Dummy Longitude: ");
      Serial.println(dummyLon, 7);
      Serial.print("Distance to dummy coordinates: ");
      Serial.print(distance);
      Serial.println(" meters");
    }
  }
}
