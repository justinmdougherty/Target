/*********
  Modified from the examples of the Arduino LoRa library
  More resources: https://randomnerdtutorials.com
*********/

#include <SPI.h>
#include <LoRa.h>

int counter = 1;


//define the pins used by the transceiver module
#define SCK 42
#define MISO 41
#define MOSI 2
#define SS 1
#define rst 5
#define dio0 4

byte localAddress = 0xFF;
int recipient;
String incoming;
byte sender;
byte incomingMsgId;
byte incomingLength;
float Latitude;
float Longitude;
byte ID;


void setup() {
  //initialize Serial Monitor
  Serial.begin(115200);
  SPI.begin(SCK, MISO, MOSI, SS);
  Serial.println("LoRa Receiver");

  //setup LoRa transceiver module
  LoRa.setPins(SS, rst, dio0);



  //replace the LoRa.begin(---E-) argument with your location's frequency
  //433E6 for Asia
  //866E6 for Europe
  //915E6 for North America
  while (!LoRa.begin(915E6)) {
    Serial.println(".");
    delay(500);
  }
  // Change sync word (0xF3) to match the receiver
  // The sync word assures you don't get LoRa messages from other LoRa transceivers
  // ranges from 0-0xFF
  //LoRa.setSyncWord(0xF3);
  Serial.println("LoRa Initializing OK!");
}

void loop() {
  int packetSize = LoRa.parsePacket();
  if (packetSize == 0) return;
  recipient = LoRa.read();
  sender = LoRa.read();
  incomingMsgId = LoRa.read();
  incomingLength = LoRa.read();
  byte LatitudeBytes[4];
  byte LongitudeBytes[4];
  LoRa.readBytes(LatitudeBytes, 4);
  LoRa.readBytes(LongitudeBytes, 4);
  memcpy(&Latitude, &LatitudeBytes, sizeof(Latitude));
  memcpy(&Longitude, &LongitudeBytes, sizeof(Longitude));
  ID = LoRa.read();
  incoming = String(Latitude) + String(Longitude) + String(ID);
  if (incomingLength != incoming.length()) {
    Serial.println("error: message length does not match length");
    return;
  }
  if (recipient != localAddress) {
    Serial.println("This message is not for me.");
    return;
  }
  Serial.println("********************************************");
  //Serial.println("Received from: 0x" + String(sender, HEX));
  //Serial.println("Sent to: 0x" + String(recipient, HEX));
  Serial.println("Message ID: " + String(incomingMsgId));
  //Serial.println("Message length: " + String(incomingLength));
  Serial.println("Latitude: " + String(Latitude, 6));
  Serial.println("Longitude: " + String(Longitude, 6));
  Serial.println("ID: " + String(ID));
  //Serial.println("RSSI: " + String(LoRa.packetRssi()));
  //Serial.println("Snr: " + String(LoRa.packetSnr()));
  Serial.println("");
}

/*
void loop() {
  int packetSize = LoRa.parsePacket();
  if (packetSize == 0) return;
  recipient = LoRa.read();
  sender = LoRa.read();
  incomingMsgId = LoRa.read();
  incomingLength = LoRa.read();
  Latitude = LoRa.read();
  Longitude = LoRa.read();
  ID = LoRa.read();
  incoming = String(Latitude) + String(Longitude) + String(ID);
  if (incomingLength != incoming.length()) {
    Serial.println("error: message length does not match length");
    return;
  }
  if (recipient != localAddress) {
    Serial.println("This message is not for me.");
    return;
  }
  Serial.println("********************************************");
  //Serial.println("Received from: 0x" + String(sender, HEX));
  //Serial.println("Sent to: 0x" + String(recipient, HEX));
  Serial.println("Message ID: " + String(incomingMsgId));
  //Serial.println("Message length: " + String(incomingLength));
  Serial.println("Latitude: " + String(Latitude));
  Serial.println("Longitude: " + String(Longitude));
  Serial.println("ID: " + String(ID));
  //Serial.println("RSSI: " + String(LoRa.packetRssi()));
  //Serial.println("Snr: " + String(LoRa.packetSnr()));
  Serial.println("");
}
*/
